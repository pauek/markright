@parse-test(Hi)
  @input*
    hi
  @expected*
    Markright
      Paragraph
        "hi"
@parse-test(A break)
  @input*
    hi
    ho
  @expected*
    Markright
      Paragraph
        "hi"
        Break
        "ho"
@parse-test(Several inline commands)
  @input*
    @a{123}
    @b{456}
    @c{a_a_a_a}
  @expected*
    Markright
      Paragraph
        InlineCmd(a)
          "123"
        Break
        InlineCmd(b)
          "456"
        Break
        InlineCmd(c)
          "a_a_a_a"
@parse-test(Two paragraphs)
  @input*
    hi

    ho
  @expected*
    Markright
      Paragraph
        "hi"
      Paragraph
        "ho"
@parse-test(Inline command)
  @input*
    a @b c
  @expected*
    Markright
      Paragraph
        "a "
        InlineCmd(b)
        " c"
@parse-test(Block command)
  @input*
    @cmd(a, b, c)
      text content
  @expected*
    Markright
      BlockCmd(cmd, ["a", "b", "c"])
        Paragraph
          "text content"
@parse-test(Empty Command)
  @input*
    Some text @ and @ two empty inline commands
  @expected*
    Markright
      Paragraph
        "Some text "
        InlineCmd()
        " and "
        InlineCmd()
        " two empty inline commands"
@parse-test(Nested Delimiter)
  @input*
    @A{b @c{d} e}
  @expected*
    Markright
      Paragraph
        InlineCmd(A)
          "b "
          InlineCmd(c)
            "d"
          " e"
@parse-test(Inline split into different lines)
  @input*
    Some text @cmd(1, 2, 3){The inside
    of this command is longer than usual
    bli bla blu} and some more
  @expected*
    Markright
      Paragraph
        "Some text "
        InlineCmd(cmd, ["1", "2", "3"])
          "The inside"
          Break
          "of this command is longer than usual"
          Break
          "bli bla blu"
        " and some more"
@parse-test(Inline with split args)
  @input*
    Some text @cmd(
      a, b, c
    ) and some more
  @expected*
    Markright
      Paragraph
        "Some text "
        InlineCmd(cmd, ["a", "b", "c"])
        " and some more"
@parse-test(Inline with split args)
  @input*
    Some text @cmd(
      a=1, b=22, 
      c=333
    ){  with
    text inside
    in 3 lines} and some more
  @expected*
    Markright
      Paragraph
        "Some text "
        InlineCmd(cmd, ["a=1", "b=22", "c=333"])
          "  with"
          Break
          "text inside"
          Break
          "in 3 lines"
        " and some more"
@parse-test(Inline with split args)
  @input*
    Some text @cmd(a 1, b 2){
      Some inside...
      bcd
    } and then some more
  @expected*
    Markright
      Paragraph
        "Some text "
        InlineCmd(cmd, ["a 1", "b 2"])
          Break
          "Some inside..."
          Break
          "bcd"
        " and then some more"
@parse-test(Three inline commands)
  @input*
    @a @b @c
  @expected*
    Markright
      Paragraph
        InlineCmd(a)
        " "
        InlineCmd(b)
        " "
        InlineCmd(c)
@parse-test(Indentation in inner raw text)
  @input*
    @raw*
      1st
        2nd
      3rd
  @expected*
    Markright
      BlockCmd(raw*)
        "1st"
        "  2nd"
        "3rd"
@parse-test(Paragraph Command Paragraph)
  @input*
    hi

    @cmd

    ho
  @expected*
    Markright
      Paragraph
        "hi"
      BlockCmd(cmd)
      Paragraph
        "ho"
@parse-test(Inline raw command)
  @input*
    Bla @code*{hi ho} yay
  @expected*
    Markright
      Paragraph
        "Bla "
        InlineCmd(code*)
          "hi ho"
        " yay"
@parse-test(Inline command in its own line)
  @input*
    some text
    @somecmd(a){inside text}
    some more text
  @expected*
    Markright
      Paragraph
        "some text"
        Break
        InlineCmd(somecmd, ["a"])
          "inside text"
        Break
        "some more text"
@parse-test(More complex paragraph)
  @input*
    a @b c
    @d{e} @f(g)
  @expected*
    Markright
      Paragraph
        "a "
        InlineCmd(b)
        " c"
        Break
        InlineCmd(d)
          "e"
        " "
        InlineCmd(f, ["g"])
@parse-test(More complex line)
  @input*
    Some line @strong[with @em{many @code<new>} commands] inside
  @expected*
    Markright
      Paragraph
        "Some line "
        InlineCmd(strong)
          "with "
          InlineCmd(em)
            "many "
            InlineCmd(code)
              "new"
          " commands"
        " inside"
@parse-test(Empty lines)
  @input*

    @something

      Yay
  @expected*
    Markright
      BlockCmd(something)
        Paragraph
          "Yay"
@parse-test(Nested Delimiter 2)
  @input*
    @a{b @c{d @e{f} g} h}
  @expected*
    Markright
      Paragraph
        InlineCmd(a)
          "b "
          InlineCmd(c)
            "d "
            InlineCmd(e)
              "f"
            " g"
          " h"
@parse-test(Different delimiters 2)
  @input*
    @a<A>@b<<B>>@c<<<C>>>@d<<<<D>>>>
    @e[E]@f[[F]]@g[[[G]]]@h[[[[H]]]]
    @i{I}@j{{J}}@k{{{K}}}@l{{{{L}}}}
  @expected*
    Markright
      Paragraph
        InlineCmd(a)
          "A"
        InlineCmd(b)
          "B"
        InlineCmd(c)
          "C"
        InlineCmd(d)
          "D"
        Break
        InlineCmd(e)
          "E"
        InlineCmd(f)
          "F"
        InlineCmd(g)
          "G"
        InlineCmd(h)
          "H"
        Break
        InlineCmd(i)
          "I"
        InlineCmd(j)
          "J"
        InlineCmd(k)
          "K"
        InlineCmd(l)
          "L"
@error-message-test(Wrong indentation)
  @input*
    @cmd1
        @inline1 a b c
      and more text
  @expected*
    2:5: ParseError: Wrong indentation
@error-message-test(Unfinished args)
  @input*
    @cmd(a, b, c
  @expected*
    2:1: ParseError: Found end of text while looking for ')'
@error-message-test(Block command in between paragraphs)
  @input*
    some text
    @somecmd(a)
      inside text
    some more text
  @expected*
    2:1: ParseError: Block command inside paragraph
@error-message-test(Wrong closing bracket)
  @input*
    @body
      bla bla @a{inside
    } xxx
  @expected*
    3:1: ParseError: Expected to find '}' before indentation break
@parse-test(debug 1)
  @input*
    @B(a,b,c)
      line1 @
      line2
      line3
  @expected*
    Markright
      BlockCmd(B, ["a", "b", "c"])
        Paragraph
          "line1 "
          InlineCmd()
          Break
          "line2"
          Break
          "line3"
@parse-test(Break Command)
  @input*
    @block
      a b c
      d e f
    xxx
  @expected*
    Markright
      BlockCmd(block)
        Paragraph
          "a b c"
          Break
          "d e f"
      Paragraph
        "xxx"
@print-test*(Print test 1)
  @a{hola @d{que @e<x> @ hi ho} tal} fiu fiu
  hola que tal @a{} @b @c(1,2,3)<<ddd>>

  @B(a,b,c)
    line1 @
    line2
    line3

    skdj 
    asdfasdf

    @C(bla,bli,blo)
      23874
      2834782734
      827482734

    @d @e @f

  Esse veniam magna in aute aute. Est 
  officia labore culpa esse adipisicing 
  excepteur sunt officia deserunt sint 
  amet sit sit ex. Mollit sit est sint 
  duis. Ut consectetur dolore incididunt 
  do aute proident deserunt laboris 
  aute amet.

  blis blias blus

  @xxx
    a
    b
    c

  jor jor

  @a{2} @b{{3}} @c{{{asdf}}} bli sblis

  @command
    fip 
    fliap

    @someother
      blis blia
      @blis-blis blis blis
      hola

    xxx

  more text
